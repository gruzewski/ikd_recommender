{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template to install Apache Mahout - a recommendation engine with Puppet-Agent",
  "Parameters": {
    "RecommenderKeyName": {
      "Type": "String",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Default": "frontend-key"
    },
    "RecommenderInstanceType": {
      "Default": "t2.micro",
      "Description": "Type of EC2 instance for web server",
      "Type": "String",
      "AllowedValues": [
        "t2.micro",
        "m3.small"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "RecommenderVpcId": {
      "Description": "The ID of the VPC where this will be built.",
      "Type": "String",
      "Default": "vpc-52a90937"
    },
    "DatabaseUser": {
      "Default": "admin",
      "NoEcho": "true",
      "Type": "String",
      "Description": "Admin account name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DatabasePassword": {
      "Default": "admin",
      "NoEcho": "true",
      "Type": "String",
      "Description": "Test database admin account password",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": {"Arch": "64"},
      "m3.small": {"Arch": "64"}
    },
    "AWSRegionArch2AMI": {
      "eu-west-1": {
        "32": "ami-24506250",
        "64": "ami-a10897d6"
      }
    }
  },
  "Resources": {
    "CFNInitUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "AccessForCFNInit",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "cloudformation:DescribeStackResource",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "CFNKeys": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {"Ref": "CFNInitUser"}
      }
    },
    "RecommenderServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "puppet": [],
                "ruby-devel": [],
                "gcc": [],
                "make": [],
                "rubygems": [],
                "java-1.7.0-openjdk": []
              },
              "rubygems": {
                "json": []
              }
            },
            "files": {
              "/etc/yum.repos.d/epel.repo": {
                "source": "https://s3.amazonaws.com/cloudformation-examples/enable-epel-on-amazon-linux-ami",
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/puppet/puppet.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "   logdir=/var/log/puppet\n",
                      "   rundir=/var/run/puppet\n",
                      "   ssldir=$vardir/ssl\n",
                      "   pluginsync=true\n",
                      "[agent]\n",
                      "   classfile=$vardir/classes.txt\n",
                      "   localconfig=$vardir/localconfig\n"
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "services": {
              "sysvinit": {
                "puppet": {
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            }
          }
        },
        "Puppet": {
          "roles": ["recommender"]
        }
      },
      "Properties": {
        "SecurityGroups": [{"Ref": "EC2RecommenderSecurityGroup"}],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {"Ref": "AWS::Region"},
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {"Ref": "RecommenderInstanceType"},
                "Arch"
              ]
            }
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v -s ",
                {"Ref" : "AWS::StackName"},
                " -r RecommenderServer ",
                " --access-key ", { "Ref" : "CFNKeys" },
                " --secret-key=", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]},
                " --region ", {"Ref": "AWS::Region"},
                "\n cd /tmp & wget http://www.mirrorservice.org/sites/ftp.apache.org/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz\n",
                "tar xzf apache-maven-3.3.3-bin.tar.gz -C /opt\n",
                "cd /opt\n",
                "ln -s apache-maven-3.3.3 maven\n",
                "echo 'export M2_HOME=/opt/maven\nexport PATH=${M2_HOME}/bin:${PATH}' > /etc/profile.d/maven.sh\n"
              ]
            ]
          }
        },
        "KeyName": {"Ref": "RecommenderKeyName"},
        "InstanceType": {"Ref": "RecommenderInstanceType"}
      }
    },
    "EC2RecommenderSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "RecommenderServer",
                "PublicDnsName"
              ]
            },
            "/"
          ]
        ]
      },
      "Description": "URL of the WordPress website"
    }
  }
}
